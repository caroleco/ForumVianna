@model ForumVianna.Model.DB.Model.Discussao

@{
    ViewBag.Title = "AddDiscussao";

    var selTopicos = (SelectList)ViewBag.Topicos;
}

<h2>Nova Discussão</h2>


@using (Html.BeginForm("GravarDiscussao", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="container">
        <div class="modal-dialog">
            <div class="modal-header">
            <div class="modal-content">
                <h4>Discussao</h4>
                <hr />
                <div class="modal-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Dono.Apelido, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Dono.Apelido, new Dictionary<string, object>() { { "class", "form-control" }, { "readonly", "readonly" } })
                            @Html.ValidationMessageFor(model => model.Ativo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Tópico", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("idTopico", selTopicos, new Dictionary<string, object>() { { "class", "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Situacao, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <select name="Situacao" id="Situacao" class="form-control">
                                <option value="Aberta">Aberta</option>
                                <option value="Pausada">Pausada</option>
                                <option value="Encerrada">Encerrada</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.Situacao, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                
            </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
